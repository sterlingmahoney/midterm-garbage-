// Declare and construct objects 

HLine h1 = new HLine(20, 0.5); 
HLine h2 = new HLine(50, 1.0); 
HLine h3 = new HLine(100, 1.5);
HLine h4 = new HLine(150, 2.0);

dot d = new dot();

void setup() 
{
  fullScreen();
  frameRate(30);
  background (0); 
} //setup

void draw() { 
  
    if ((mouseX > width/2) && (mouseY > height/2)) {
   background (255);
  }// white background
  else if ((mouseX < width/2) && (mouseY > height/2)) {
    background (0, 247, 210);
  } // blue background
   else if ((mouseX < width/2) && (mouseY < height/2)) { 
    background(255, 101, 238);
  }// pink background
  else if ((mouseX > width/2) && (mouseY < height/2)) {
   background (0);
  } // black background
  
  h1.update(); 
  h2.update();
  h3.update();
  h4.update();
  
  d.display();
  
 } //draw
 
 class HLine { 
  float ypos; 
  float speed; 
  float x = 0;
  float gravity = 0.98;
  float b = -1;
  HLine (float y, float s) {  
    ypos = y; 
    speed = s + 3; 
    
  } //HLine
  void update() {
    ypos += speed;
    x += gravity;
    ypos += x;
  
  if (ypos > 800){ 
      x = x - 1;
      speed = speed - 1;
    } else if (ypos < 0) {
      x = x+1;
      speed = speed + 1;
    }
   stroke (255);
   strokeWeight (3);
   
      if ((mouseX > width/2) && (mouseY > height/2)) {
   
     stroke (0, 247, 210);
  }//if blue stroke, white background
  else if ((mouseX < width/2) && (mouseY > height/2)) {
    
    stroke (255, 101, 238);
  } //if pink stroke, blue background
   else if ((mouseX < width/2) && (mouseY < height/2)) { 
    
     stroke (0);
  }//if black stroke, pink background
  else if ((mouseX > width/2) && (mouseY < height/2)) {
   
    stroke (255);
  } //if white stroke, black background
    line(0, ypos, mouseX+200, mouseX);
    line(0, ypos, width, mouseX);
    line(mouseX, ypos, width, 0);
    line(0, ypos, width, mouseY+150);
    line(mouseY, ypos, width, mouseX+200);
    line(0, ypos, width, mouseY+500);
    line(0, ypos, mouseX+170, mouseX-250);
    line(mouseY, ypos, width, mouseX);
    line(0, ypos, width, mouseX-100);
    line(0, ypos, mouseX+120, -mouseX);
    line(mouseX, ypos, width, mouseY);
    line(0, ypos, width, mouseX);
    line(0, ypos, mouseX+60, mouseX);
    line(0, ypos, mouseX+250, mouseY-200);
    line(0, ypos, width, mouseX);
    line(mouseY, ypos, mouseX+30, mouseY);
    line(0, ypos, mouseX-30, mouseY+20);
     
  }//void update

} //class HLine

class dot {
  boolean circle1 = true;
  boolean circle2 = true;
  boolean circle3 = true;
  boolean circle4 = true;
  float x = 0;
  float y = 0;
  
  
  void display () {
    if ((mouseX > width/2) && (mouseY > height/2)) {
      circle1 = true;
    } else if ((mouseX < width/2) && (mouseY > height/2)) {
      circle1 = false;
    } else if ((mouseX < width/2) && (mouseY < height/2)) {
      circle1 = false;
    } else if ((mouseX > width/2) && (mouseY < height/2)) {
      circle1 = false;
    }
          if ((mouseX > width/2) && (mouseY > height/2)) {
      circle2 = false;
    } else if ((mouseX < width/2) && (mouseY > height/2)) {
      circle2 = true;
    } else if ((mouseX < width/2) && (mouseY < height/2)) {
      circle2 = false;
    } else if ((mouseX > width/2) && (mouseY < height/2)) {
      circle2 = false;
    }
           if ((mouseX > width/2) && (mouseY > height/2)) {
      circle3 = false;
    } else if ((mouseX < width/2) && (mouseY > height/2)) {
      circle3 = false;
    } else if ((mouseX < width/2) && (mouseY < height/2)) {
      circle3 = true;
    } else if ((mouseX > width/2) && (mouseY < height/2)) {
      circle3 = false;
    }
           if ((mouseX > width/2) && (mouseY > height/2)) {
      circle4 = false;
    } else if ((mouseX < width/2) && (mouseY > height/2)) {
      circle4 = false;
    } else if ((mouseX < width/2) && (mouseY < height/2)) {
      circle4 = false;
    } else if ((mouseX > width/2) && (mouseY < height/2)) {
      circle4 = true;
    }// true false
    
    if (circle1) {
      ellipseMode (CENTER);
      ellipse (mouseX, mouseY, x, y);
      fill (0);  
      noStroke ();
      x -= 2;
      y -= 2;
      }//if white fill 
  else { circle1 = false;}
  
  if (circle2){
    ellipseMode (CENTER);
    ellipse (mouseX, mouseY, x, y);
    fill (255); 
    noStroke ();
    x += 2;
    y += 2;
     } //black fill
  else { circle2 = false;
  }
    
  if (circle3) {
     ellipseMode (CENTER);
     ellipse (mouseX, mouseY, x, y);
     fill (0, 247, 210);
     noStroke ();
     x -= 2;
     y -= 2;
     } //blue fill
   else { circle3 = false;
   }
  
  if (circle4) {
    ellipseMode (CENTER);
    ellipse (mouseX, mouseY, x, y);
    fill (255, 101, 238);
    noStroke ();
    x += 2 ;
    y += 2;
    }//if pink fill
  else { circle4 = false;
  } //if else
  
      if (circle1) {
      ellipseMode (CENTER);
      ellipse (mouseY, mouseX, x, y);
      fill (0);  
      noStroke ();
      x -= 2;
      y -= 2;
      }//if white fill 
  else { circle1 = false;}
  
  if (circle2){
    ellipseMode (CENTER);
    ellipse (mouseY, mouseX, x, y);
    fill (255); 
    noStroke ();
    x += 2;
    y += 2;
     } //black fill
  else { circle2 = false;
  }
    
  if (circle3) {
     ellipseMode (CENTER);
     ellipse (mouseY, mouseX, x, y);
     fill (0, 247, 210);
     noStroke ();
     x -= 2;
     y -= 2;
     } //blue fill
   else { circle3 = false;
   }
  
  if (circle4) {
    ellipseMode (CENTER);
    ellipse (mouseY, mouseX, x, y);
    fill (255, 101, 238);
    noStroke ();
    x += 2 ;
    y += 2;
    }//if pink fill
  else { circle4 = false;
  } //if else
  
}//display

}//class dot
